// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SteamData;

#nullable disable

namespace SteamData.Migrations
{
    [DbContext(typeof(SteamContext))]
    [Migration("20230411152638_AddUserGames")]
    partial class AddUserGames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SteamDomain.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"));

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            Gender = "MOBA",
                            Title = "League of Legends",
                            UserId = 1
                        },
                        new
                        {
                            GameId = 2,
                            Gender = "Shooter",
                            Title = "Fortnite",
                            UserId = 2
                        },
                        new
                        {
                            GameId = 3,
                            Gender = "Horror",
                            Title = "Call of Cthulhu",
                            UserId = 3
                        },
                        new
                        {
                            GameId = 4,
                            Gender = "Farming",
                            Title = "Slime Rancher",
                            UserId = 5
                        });
                });

            modelBuilder.Entity("SteamDomain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Nickname = "Dalsyan"
                        },
                        new
                        {
                            UserId = 2,
                            Nickname = "EnricDeTu"
                        },
                        new
                        {
                            UserId = 3,
                            Nickname = "Jamonsioo"
                        },
                        new
                        {
                            UserId = 4,
                            Nickname = "ReiSapo"
                        },
                        new
                        {
                            UserId = 5,
                            Nickname = "Tenxten"
                        });
                });

            modelBuilder.Entity("SteamDomain.Game", b =>
                {
                    b.HasOne("SteamDomain.User", null)
                        .WithMany("Games")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SteamDomain.User", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
